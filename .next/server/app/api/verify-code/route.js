"use strict";(()=>{var e={};e.id=320,e.ids=[320],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},36619:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>y,patchFetch:()=>m,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>f,staticGenerationAsyncStorage:()=>l});var o={};s.r(o),s.d(o,{POST:()=>d});var t=s(73278),n=s(45002),i=s(54877),a=s(51534),c=s(62651);async function d(e){await (0,a.Z)();try{let{username:r,code:s}=await e.json(),o=decodeURIComponent(r),t=await c.Z.findOne({username:o});if(!t)return console.error("User not found:",o),Response.json({success:!1,message:"User not found"},{status:404});let n=t.verifyCode===s,i=new Date(t.verifyCodeExpiry)>new Date;if(n&&i)return t.isVerified=!0,await t.save(),console.log("Account verified for user:",o),Response.json({success:!0,message:"Account verified successfully"},{status:200});if(!i)return console.warn("Verification code expired for user:",o),Response.json({success:!1,message:"Verification code has expired. Please request a new code."},{status:400});return console.warn("Invalid verification code for user:",o),Response.json({success:!1,message:"Incorrect verification code. Please try again."},{status:400})}catch(e){return console.error("Error verifying user:",e),Response.json({success:!1,message:"Error verifying user"},{status:500})}}let u=new t.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/verify-code/route",pathname:"/api/verify-code",filename:"route",bundlePath:"app/api/verify-code/route"},resolvedPagePath:"E:\\NextJS\\mystrymessage\\src\\app\\api\\verify-code\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:f}=u,y="/api/verify-code/route";function m(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:l})}},73278:(e,r,s)=>{e.exports=s(30517)},51534:(e,r,s)=>{s.d(r,{Z:()=>i});var o=s(11185),t=s.n(o);let n={},i=async function(){if(n.isConnected){console.log("Already connected to database");return}try{let e=await t().connect(process.env.MONGODB_URI||"",{});console.log("db:",e),n.isConnected=e.connections[0].readyState,console.log("db.connetions:",e.connection),console.log("DB Connected Successfully")}catch(e){console.log("Database connection failed",e),process.exit(1)}}},62651:(e,r,s)=>{s.d(r,{Z:()=>a});var o=s(11185),t=s.n(o);let n=new o.Schema({content:{type:String,required:!0},createdAt:{type:Date,required:!0,default:Date.now}}),i=new o.Schema({username:{type:String,required:[!0,"Username is required"],trim:!0,unique:!0},email:{type:String,required:[!0,"Email is Required"],unique:!0,match:[/.+\@.+\..+/,"please use a valid email adderss"]},password:{type:String,required:[!0,"password is required"]},verifyCode:{type:String,required:[!0,"Verify Code is required"]},verifyCodeExpiry:{type:Date,required:[!0,"verify code is Expired"]},isVerified:{type:Boolean,default:!1},isAcceptingMessage:{type:Boolean,default:!0},messages:[n]}),a=t().models.User||t().model("User",i)}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),o=r.X(0,[379],()=>s(36619));module.exports=o})();